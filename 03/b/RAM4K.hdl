// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
//Similar to previous RAMs
DMux(in=load, sel=address[11], a=la, b=lb);

DMux(in=la, sel=address[10], a=laa, b=lab);

DMux(in=lb, sel=address[10], a=lba, b=lbb);

DMux(in=laa, sel=address[9], a=RAM51200, b=RAM51201);

DMux(in=lab, sel=address[9], a=RAM51202, b=RAM51203);

DMux(in=lba, sel=address[9], a=RAM51204, b=RAM51205);

DMux(in=lbb, sel=address[9], a=RAM51206, b=RAM51207);

RAM512(in=in, load=RAM51200, address=address[0..8], out=aa);
RAM512(in=in, load=RAM51201, address=address[0..8], out=ab);
RAM512(in=in, load=RAM51202, address=address[0..8], out=ac);
RAM512(in=in, load=RAM51203, address=address[0..8], out=ad);
RAM512(in=in, load=RAM51204, address=address[0..8], out=ae);
RAM512(in=in, load=RAM51205, address=address[0..8], out=af);
RAM512(in=in, load=RAM51206, address=address[0..8], out=ag);
RAM512(in=in, load=RAM51207, address=address[0..8], out=ah);

Mux16(a=aa, b=ab, sel=address[9], out=ma);
Mux16(a=ac, b=ad, sel=address[9], out=mb);
Mux16(a=ae, b=af, sel=address[9], out=mc);
Mux16(a=ag, b=ah, sel=address[9], out=md);

Mux16(a=ma, b=mb, sel=address[10], out=maa);
Mux16(a=mc, b=md, sel=address[10], out=mab);

Mux16(a=maa, b=mab, sel=address[11], out=out);
}
